---
swagger: "2.0"
info:
  description: |
    This API manages product inventory resources. It enables creating a resource in the inventory. It also enables retrieving products from the inventory, including their versions and states, their prices, and related parties.
    ###### Compliant with TMF637 Product Inventory Management API REST Specification R16.5.1
  version: "2.0"
  title: Product Inventory Management
  contact:
    name: Amdocs Inc.
    url: http://www.amdocs.com
    email: support@amdocs.com
  license:
    name: Amdocs Inc.
    url: http://
  x-amdocs:
    exposed: public
    service-principals:
    - pi-product-app-id
    - pi-factory-app-id
    - pi-search-app-id
    - pi-validateproduct-app-id
    - pi-price-app-id
host: amdocs.com
basePath: /productInventoryManagement/v2
schemes:
- https
paths:
  /product:
    get:
      tags:
      - productInventoryManagement
      summary: Request to retrive products assigned to a customer
      description: "**Description&#58;**\n        ###### TMF Open API compliant \n   This operation retrives 'customer'- relatedPartyId,  product or products, depending on the query needed,  additional filters are 'status', 'product offering type' and 'enabled by product'.\n"
      operationId: retrieveProducts
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: relatedPartyId
        in: query
        description: |
          The ID of the customer that has this assigned product
        required: false
        type: string
      - name: statuses
        in: query
        description: |
          The list of statuses for a product tree, used to set the status for the products in the tree
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: productRootId
        in: query
        description: |
          The ID of the root product in the product tree
        required: false
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client.
        required: false
        type: string
      - name: filter
        in: query
        description: |
          The filter for the output records. The filter is used as follows filter=[attributeName][operator][value],[value][&|;]&|;][attributeName][operator][value],[value] The supported values and operators for the filter are as follows -product.id == product.primaryId ==  externalIdentifier.type== externalIdentifier.id==
          when provided time to analyzee will be longer than other retrive tasks
        required: false
        type: string
      - name: productOfferingType
        in: query
        description: "The type of the product offering, The service searches for any of the product, in the prooduct tree which match a specific productOfferingType \n"
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: productOfferingTypeGroup
        in: query
        description: "The (real) type of the product offering, The service searches for any of the product, in the prooduct tree which match a specific productOfferingTypeGroup \n"
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: productOfferingClassification
        in: query
        description: |
          The Classification of the product offering, The service searches for any of the product, in the prooduct tree which match a specific productOfferingClassification (subscription, customer, main)
        required: false
        type: string
        collectionFormat: multi
      - name: replacableProductOfferingId
        in: query
        description: |
          The replaceable inventory product retrieved according to the catalog offer ID
        required: false
        type: string
      - name: productEnabledByProductId
        in: query
        description: |
          The list of primary products. The service searches all dependant products by the primary product ID of the enabling products. It returns a list of primary products which contain the dependant product. A dependant product is a product with the ???enable by??? relationship to the enabling product.
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: productSpecificationTypeInProduct
        in: query
        description: |
          <b>Depricated</b> The primary products. The service searches for any of the product specification types within the tree of product offerings. It returns a list of the primary products which contain at least one product specification with the input types.
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      - name: date
        in: query
        description: |
          The date on which the product was created, or next version created date, according to configuration, when provided time to analyzee will be longer than other retrive tasks
        required: false
        type: string
        format: date-time
      - name: calculatePrice
        in: query
        description: "The product price should be re-quoted during the retrival process of the product \n"
        required: false
        type: boolean
        default: false
      - name: mask
        in: query
        description: |
          The type of product to be returned to the consumer - currently support\n
          - 'returnNote' - Once set, notes associated with Product are returned. If specific noteType is required, this type should be specified in the mask.
          <i>Example&#58; mask=returnNote</i>
        required: false
        type: string
      responses:
        200:
          description: |
            *OK* - The product was retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        - 
        private-roles:
        - D1P_ProductInventoryManagement_read
        - D1_RetrieveWithNoHook_read
        - FndP_APIGateway_gw
    post:
      tags:
      - productInventoryManagement
      summary: Request to create a single product in the inventory
      description: "This operation creates a single product \n###### TMF Open API compliant\n**Mandatory&#58;**\n- Product.parentId (represnts the parent in the produt tree)\n- Product.productRootId (represnts the root product in the produt tree)\n- Product.ProductOrderRef\n- Product.ProductOfferingRef (in case of product offer)\n- Product.ProductSpecificationRef (in case of product specification)\n- Product.BillingAccountRef\n- Product.RelatedPartyRef (role = Customer)        \n\n**Readonly&#58;**\n- Product.CharacteristicMetadata\n- Product.ProductOrderRef\n\n**Business rules&#58;**\n- modifyReason (action must match orderItem.action)\n- relatedParty (only 1 relatedRarty with role = Customer, and Customer status is Active)\n- billingAccount (relatedParty with role = Customer is a prerequisite, should be associated with the same Customer)\n- for enabled product should have Product.ExternalIdentifer\n- mask       -  'returnDraft' version\n             - 'retrunTerminatedProduct'\n\n**Reference value&#58;**\n- channel (ApplicationContext)\n- relatedParty.role = Customer (Configuration.relatedPartyCustomerRole)\n- relatedParty status Active (Configuration.customerValidatorValidStatusValues)\n"
      operationId: createSingleProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - in: body
        name: Product
        description: |
          The single product in the product inventory
        required: true
        schema:
          $ref: '#/definitions/product'
      responses:
        200:
          description: |
            *Created* - The product was created successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_createProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
    delete:
      tags:
      - productInventoryManagement
      summary: (Internal) Request to delete customer assigned products and its assigned promotions
      description: "**Description&#58;** \n           **Mandatory&#58;**\n     - Product.RelatedPartyRef (role = Customer)      \n           \n      This service deletes 'customer'- relatedPartyId products as well as its assigned promotions. this is a technical API and can be used only by the qualified consumer, - This API to be used when the PI is acting as for an external Inventory\n"
      operationId: deleteProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: relatedPartyId
        in: query
        required: true
        type: array
        items:
          type: string
        collectionFormat: csv
        minItems: 1
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      responses:
        200:
          description: |
            *Deleted* - The products were deleted successfully.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-dox-InternalAPI: true
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_delete
        private-roles:
        - D1P_ProductInventoryManagement_write
  /product/setupProduct:
    post:
      tags:
      - productInventoryManagement
      summary: Request to create a list of products in the inventory
      description: "This operation creates a bulk of products.\n###### TMF Open API compliant\n**Mandatory&#58;**\n- Product.ProductOrderRef\n- Product.ProductOfferingRef (in case of product offer)\n- Product.ProductSpecificationRef (in case of product specification)\n- Product.BillingAccountRef\n- Product.RelatedPartyRef (role = Customer)        \n\n**Readonly&#58;**\n- Product.CharacteristicMetadata\n\n**Business rules&#58;**\n- modifyReason (action must match orderItem.action)\n- relatedParty (only 1 relatedRarty with role = Customer, and Customer status is Active)\n- billingAccount (relatedParty with role = Customer is a prerequisite, should be associated with the same Customer)\n- for enabled product should have Product.ExternalIdentifer  \n**Reference value&#58;**\n- channel (ApplicationContext)\n- relatedParty.role = Customer (Configuration.relatedPartyCustomerRole)\n- relatedParty status Active (Configuration.customerValidatorValidStatusValues)\n"
      operationId: createProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: validate
        in: query
        description: |
          The validation of the operation prior to persisting the results
        required: false
        type: boolean
        default: true
      - in: body
        name: Product
        description: |
          The bulk of products in the product inventory
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/product'
          minItems: 1
      responses:
        200:
          description: |
            *Created* - The products were created successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_createProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: |-
        pi-product-ms
        - ProductInventoryManagement
  /product/updateProduct:
    post:
      tags:
      - productInventoryManagement
      summary: Request to update a product - ProductInventoryManagement
      description: "This operation updates the product version. It creates a new version.\n###### TMF Open API compliant\n**Mandatory&#58;**\n- Product.id\n- Product. alternateId\n- Product.version\n- Product.ProductOrderRef\n- Product.ProductOfferingRef (in case of product offer)\n- Product.ProductSpecificationRef (in case of product specification)\n- Product.BillingAccountRef\n- Product.RelatedPartyRef (role = Customer)        \n\n**Readonly&#58;**\n- Product.CharacteristicMetadata\n\n**Business rules&#58;**\n- modifyReason (action must match orderItem.action)\n- relatedParty (only 1 relatedRarty with role = Customer, and Customer status is Active)\n- billingAccount (relatedParty with role = Customer is a prerequisite, should be associated with the same Customer)\n- for enabled product should have Product.ExternalIdentifer  \n**Reference value&#58;**\n- channel (ApplicationContext)\n- relatedParty.role = Customer (Configuration.relatedPartyCustomerRole)\n- relatedParty status Active (Configuration.customerValidatorValidStatusValues)\n"
      operationId: updateProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: orderChange
        in: query
        description: |
          The order was changed after the product was created, although the orderitem exists. create new version
        required: false
        type: boolean
        default: false        
      - in: body
        name: Product
        description: |
          The single product in the product inventory
        required: true
        schema:
          $ref: '#/definitions/product'
      responses:
        200:
          description: |
            *OK* - The product version was created successfully.
          schema:
            $ref: '#/definitions/product'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_createProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: |-
        pi-product-ms
        - ProductInventoryManagement
  /product/updateProductList:
    post:
      tags:
      - productInventoryManagement
      summary: Request to update a list of products in the inventory
      description: |
        This service updates the version for a bulk of products. It creates a new version for a bulk of products. This service replaces the updateProduct single product definition.
      operationId: updateProductList
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: validate
        in: query
        description: |
          The validation of the operation prior to persisting the results
        required: false
        type: boolean
        default: true
      - name: orderChange
        in: query
        description: |
          The order was changed after the product was created, although the orderitem exists. create new version
        required: false
        type: boolean
        default: false         
      - in: body
        name: Product
        description: |
          The single product in the product inventory
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/product'
          minItems: 0
      responses:
        200:
          description: |
            *OK* - The product version was created successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_createProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: |-
        pi-product-ms
        - ProductInventoryManagement
  /product/productSnapshot:
    get:
      tags:
      - productInventoryManagement
      summary: Request to retrive products tree snapshot valid for a given date
      description: |
        **Description&#58;**
           This operation retrives product tree, per a given date
      operationId: retrieveProductSnapshot
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: productRootId
        in: query
        description: |
          The ID of the root product in the product tree
        required: false
        type: string
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      - name: date
        in: query
        description: |
          The date on which the product was created, or next version created date, according to configuration, when provided time to analyzee will be longer than other retrive tasks
        required: false
        type: string
        format: date-time
      - name: mask
        in: query
        description: |
          The type of product to be returned to the consumer - currently support\n
          - 'returnNote' - Once set, notes associated with Product are returned. If specific noteType is required, this type should be specified in the mask.
          <i>Example&#58; mask=returnNote</i>
        required: false
        type: string
      responses:
        "200":
          description: |
            *OK* - The product was retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
  /product/{productId}/updateStatus:
    post:
      tags:
      - productInventoryManagement
      summary: Request to update the status of a specific product
      description: "This service updates the status of a product that already exists in the inventory. ###### TMF Open API compliant **Mandatory&#58;**\n  - Product.RelatedPartyRef (role = Customer)        \n  - Product.Id\n  - Product.status\n"
      operationId: updateStatus
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: path
        description: |
          The ID of the primary product
        required: true
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: status
        in: query
        description: |
          The status of the product in the product lifecycle
        required: false
        type: string
      - name: version
        in: query
        description: |
          The version of the product
        required: false
        type: string
      responses:
        200:
          description: |
            *OK* - The status was updated successfully.
          schema:
            $ref: '#/definitions/product'
        304:
          description: |
            *NotModified* - The status was not modified.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
      x-dox-InternalAPI: true - ProductInventoryManagement
  /product/updateStatus:
    post:
      tags:
      - productInventoryManagement
      summary: Request to update the status of a specific product
      description: "This service updates the status of a list of products that already exists in the inventory. ###### TMF Open API compliant\n**Mandatory&#58;**\n  - Product.RelatedPartyRef (role = Customer) \n  In body -\n      - Product.Id\n      - Product.status\n"
      operationId: updateStatusList
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: status
        in: query
        description: |
          The status of the product in the product lifecycle
        required: false
        type: string
      - in: body
        name: Product
        description: |
          The single product in the product inventory
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/statusList'
          minItems: 1
      responses:
        200:
          description: |
            *OK* - The status was updated successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        304:
          description: |
            *NotModified* - The status was not modified.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
      x-dox-InternalAPI: true - ProductInventoryManagement
  /product/{productId}:
    get:
      tags:
      - productInventoryManagement
      summary: Request to retrive a specific product
      description: "**Description&#58;**\n      ###### TMF Open API compliant \n This operation retrives customer specific primary product\n"
      operationId: retrieveProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: path
        description: |
          Product id
        required: true
        type: string
      - name: version
        in: query
        description: |
          The version of the product
        required: false
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: mask
        in: query
        description: |
          The type of product to be returned to the consumer - currently support\n
          - 'returnNote' - Once set, notes associated with Product are returned. If specific noteType is required, this type should be specified in the mask.
          <i>Example&#58; mask=returnNote</i>
        required: false
        type: string
      responses:
        200:
          description: |
            *OK* - The product was retrieved successfully.
          schema:
            $ref: '#/definitions/product'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        private-roles:
        - D1P_ProductInventoryManagement_read
        - D1_RetrieveWithNoHook_read
        - FndP_APIGateway_gw
    patch:
      tags:
      - productInventoryManagement
      summary: (Internal) Request to update the characteristics and extension of a specific product - NOT IMPLEMENTED YET
      description: "This service updates the characteristics and extension of a product that already exists in the inventory, in case the working product is in 'created' state the information is accomulated, for any other state it shall create a new version of product, with the the additional characterisitics / extension\n\n  - Product.RelatedPartyRef (role = Customer)        \n  - Product.Id\n  - Product.characteriscis\n  - product.extension\n"
      operationId: updateCharacteristics
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: path
        description: "The ID of the product \n"
        required: true
        type: string
      - name: compositeProductId
        in: query
        description: |
          The ID of the product in the product tree, under the composite relation
        required: false
        type: string
        x-dox-NotImplemented: true
      - in: body
        name: PatchElement
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PatchElement'
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      responses:
        200:
          description: |
            *OK* - The status was updated successfully.
          schema:
            $ref: '#/definitions/product'
        304:
          description: |
            *NotModified* - The status was not modified.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
      x-dox-InternalAPI: true
      x-dox-NotImplemented: true
  /product/{productId}/version:
    get:
      tags:
      - productInventoryManagement
      summary: Retrieve all existing versions of a specific product
      description: |
        This service retrieves the versions of a specific product.
      operationId: retrieveProductVersions
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: dateFrom
        in: query
        description: |
          The date on which the entities should be retrived from
        required: false
        type: string
        format: date-time
      - name: dateTo
        in: query
        description: "The end date on which the entities should be retrived to \n"
        required: false
        type: string
        format: date-time
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      - name: relatedPartyId
        in: query
        description: |
          The ID of the customer that has this assigned product
        required: false
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: mask
        in: query
        description: |
          The type of product to be returned to the consumer - currently support\n
          - 'returnNote' - Once set, notes associated with Product are returned. If specific noteType is required, this type should be specified in the mask.
          <i>Example&#58; mask=returnNote</i>
        required: false
        type: string
      - name: productId
        in: path
        description: |
          The ID of the primary product
        required: true
        type: string
      responses:
        200:
          description: |
            *OK* - The product versions were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
  /product/{productId}/relatedProduct:
    get:
      tags:
      - productInventoryManagement
      summary: Retrieve all products that are related to the productId in path, via a specific relation type
      description: |
        This service retrieve all products that are related to the productId in path, via a specific relation type,
      operationId: retrieveRelatedProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      - name: relationType
        in: query
        description: |
          The relation type that correspond with the related product (BusinesRelation, BillingRelation)
        required: true
        type: string
      - name: relationSubType
        in: query
        description: |
          The relation type name that correspond with the related product (Bundle, Add-On)
        required: false
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: productId
        in: path
        description: |
          The ID of the primary product
        required: true
        type: string
      responses:
        200:
          description: |
            *OK* - The product versions were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
  /product/enablingProduct:
    get:
      tags:
      - productInventoryManagement
      summary: Retrieve a list of enabling products per product specification type or ID
      description: "**Mandatory&#58;**\n- Product.ProductSpecificationType or Product.ProductSpecificationId\n- Product.RelatedPartyRef (role = Customer)        \n\n**Reference value&#58;**\n- channel (ApplicationContext)\n- relatedParty.role = Customer (Configuration.relatedPartyCustomerRole)\n- relatedParty status Active (Configuration.customerValidatorValidStatusValues)\n"
      operationId: retrieveEnablingProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productSpecificationType
        in: query
        description: |
          The product specification types. The service searches for any of the product specification types within the tree of product offering.
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: productSpecificationId
        in: query
        description: "The product specification IDs. The service searches for any of the product specification IDs within the tree of product offerings. \n"
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: relatedPartyId
        in: query
        description: |
          The ID of the customer that has this assigned product
        required: false
        type: string
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      responses:
        200:
          description: |
            *OK* - The product versions were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/EnablingProduct'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
  /product/{productId}/manageProductDate:
    post:
      tags:
      - productInventoryManagement
      summary: Request to update activation and / or termination dates
      description: |
        This service manages the requested dates of the product without creating a new version, the dates that can be updated are activation date and termination date.
        <ul>
        <li>The supported action is update
        <li>The ManageProductDate receives its resource that contains
        the date fields on the product
        </ul>
      operationId: enscriptPasswordWithSalt
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: productId
        in: path
        description: |
          The ID of the product
        required: true
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - in: body
        name: managedProductDates
        description: |
          The date that is assigned to the product can be activation date or termination date
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ManageProductDate'
          minItems: 1
      responses:
        200:
          description: |
            *OK* - The product order dates were updated successfully.
          schema:
            $ref: '#/definitions/product'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'           
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
  /product/{productId}/externalIdentifier:
    post:
      tags:
      - productInventoryManagement
      summary: Request to update external identifier on a specific product
      description: |
        This service allows to update the external identifier object of the product without creating a new version
      operationId: externalIdentifier
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: operation
        in: query
        description: |
          The operation for task, can be 'update' or 'delete'
        required: false
        type: string
      - name: compositeProductId
        in: query
        description: |
          The ID of the product in the product tree, under the composite relation
        required: false
        type: string
        x-dox-NotImplemented: true
      - name: productId
        in: path
        description: |
          The ID of the product
        required: true
        type: string
      - in: body
        name: externalIdentifier
        description: |
          update external identifier object of an existing product .
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ExternalIdentifier'
      responses:
        200:
          description: |
            *ExternalIdentifiers updated* - Product External Identifiers updated successfuly  .
          schema:
            $ref: '#/definitions/product'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProduct
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
  /productPromotion:
    get:
      tags:
      - productInventoryManagement
      summary: Retrieve promotion resources that are assigned to a customer
      description: "This service retrievs product promotion resources, according to the customer and if needed additional filter, like 'status'  and / or timefram\n\n **Mandatory&#58;**\n - Product.RelatedPartyRef (role = Customer)        \n"
      operationId: retrieveProductPromotion
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: status
        in: query
        description: |
          The status of the product in the product lifecycle
        required: false
        type: string
      - name: dateFrom
        in: query
        description: |
          The date on which the entities should be retrived from
        required: false
        type: string
        format: date-time
      - name: dateTo
        in: query
        description: "The end date on which the entities should be retrived to \n"
        required: false
        type: string
        format: date-time
      - name: promotionId
        in: query
        description: |
          The list of IDs of the promotions
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: relatedPartyId
        in: query
        description: |
          The ID of the customer that has this assigned product
        required: false
        type: string
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      responses:
        200:
          description: |
            *OK* - The product promotion were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductPromotion'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProductPromotion
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
    post:
      tags:
      - productInventoryManagement
      summary: Request to create a promotion resource
      description: "This service creates a product promotion resource\n**Mandatory&#58;**\n- Product.RelatedPartyRef (role = Customer)        \n- ProductPromotion.immediatePromotionId\n- ProductPromotion.status\n- ProductPromotion.promotionRef\n- ProductPromotion.benefitProduct\n\n**Readonly&#58;**\n- ProductPromotion.id\n- ProductPromotion.BenefitProduct.id\n- ProductPromotion.TriggerProduct.id\n\n**Business rules&#58;**\n- modifyReason (action must match orderItem.action)\n- relatedParty (only 1 relatedRarty with role = Customer, and Customer status is Active)\n- billingAccount (relatedParty with role = Customer is a prerequisite, should be associated with the same Customer)\n- for enabled product should have Product.ExternalIdentifer  \n**Reference value&#58;**\n- PromotionRef\n- relatedParty.role = Customer (Configuration.relatedPartyCustomerRole)\n- relatedParty status Active (Configuration.customerValidatorValidStatusValues)\n"
      operationId: getIpAddr
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - in: body
        name: productPromotion
        description: |
          Creates a product promotion resource in the product promotion inventory .
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ProductPromotion'
          minItems: 1
      responses:
        200:
          description: |
            *Created* - Product created successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductPromotion'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_createPromotion
        private-roles:
        - D1P_ProductInventoryManagement_write
  /productPromotionList:
    get:
      tags:
      - productInventoryManagement
      summary: Bulk export of promotion resource - NOT IMPLEMENTED
      description: "This service retrieves a list of assigned product promotions, according to a certain status and expiration date - This API is a technical API to be used internally \n"
      operationId: retrieveProductPromotionList
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: status
        in: query
        description: |
          The status of the product in the product lifecycle
        required: false
        type: string
      - name: dateFrom
        in: query
        description: |
          The date on which the entities should be retrived from
        required: false
        type: string
        format: date-time
      - name: dateTo
        in: query
        description: "The end date on which the entities should be retrived to \n"
        required: false
        type: string
        format: date-time
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      responses:
        200:
          description: |
            *OK* - List of product promotions retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductPromotion'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-NotImplemented: true
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProductPromotion
        private-roles:
        - D1P_ProductInventoryManagement_read
  /productPromotion/{promotionId}:
    get:
      tags:
      - productInventoryManagement
      summary: Retrive a specific assigned promotion resource
      description: "This service retrievs product promotion resources, of a specifc assigned product, according to the customer \n\n **Mandatory&#58;**\n - Product.RelatedPartyRef (role = Customer) \n"
      operationId: retrieveSpecificProductPromotion
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: promotionId
        in: path
        description: |
          The ID of the product promotion
        required: true
        type: string
      responses:
        200:
          description: |
            *OK* - The product was retrieved successfully.
          schema:
            $ref: '#/definitions/ProductPromotion'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_retrieveProductPromotion
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
    patch:
      tags:
      - productInventoryManagement
      summary: (Internal) Partial Update to the promotion resrouce
      description: |
        This service enables a partial update of the of a product promotion resource that already exists in inventory, it should be restricted to be used only by the appropriate business flow entity (OH)
        **Patchable elements&#58;**
        - PromotionAction.ValidFor
        - BenefitProduct.id/BenefitProduct.itemStatus
      operationId: updatePromotion
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: promotionId
        in: path
        description: |
          Product promotion id
        required: true
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: status
        in: query
        description: |
          The status of the product in the product lifecycle
        required: false
        type: string
      - in: body
        name: PromotionPatch
        description: "The product promotions fileds and their assigned values of the resource to be updated \nExample - \n{ \"path\": \"ProductPromotion{id}/BenefitProduct{id}/PromotionAction{id}/effectiveFor\n  \"op\": \"add\", ???remove???, ???update???\n  \"value\": { TimePeriod }  }\n"
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PatchElement'
      responses:
        200:
          description: |
            *OK* - Status was updated successfully.
          schema:
            $ref: '#/definitions/ProductPromotion'
        304:
          description: |
            *NotModified* - same status.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProductPromotion
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-InternalAPI: true
      x-dox-Microservice: pi-product-ms
  /productPromotion/{promotionId}/updateStatus:
    post:
      tags:
      - productInventoryManagement
      summary: Update of a specific promotion status
      description: |
        This service updates the status of a product promotion that already exists in inventory
         **Mandatory&#58;**
        - Product.RelatedPartyRef (role = Customer)         - ProductPromotion.Id - ProductPromotion.status
      operationId: updatePromotionStatus
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: promotionId
        in: path
        description: |
          Product promotion id
        required: true
        type: string
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: status
        in: query
        description: |
          The status of the product in the product lifecycle
        required: false
        type: string
      responses:
        200:
          description: |
            *OK* - Status was updated successfully.
          schema:
            $ref: '#/definitions/ProductPromotion'
        304:
          description: |
            *NotModified* - same status.
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProductPromotion
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
  /product/generateId:
    post:
      tags:
      - generateProductId
      summary: Generate new product Id
      description: This task generates Product identifier
      operationId: generateProductId
      schemes:
      - https
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: requestQuantity
        in: query
        description: The quantity of ids to create if not specified only one
        required: false
        type: integer
        maximum: 1000
        minimum: 1
      responses:
        "200":
          description: |
            *OK* - The product identifier was generated successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductId'
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles: 
        - D1_ProductInventoryManagement_systemCreateProductId
        private-roles:
        - D1P_ProductInventoryManagement_write
  /productPromotion/generateId:
    post:
      tags:
      - generateProductPromotionId
      summary: Generate new product promotion Id
      description: This task generates Product Promotion identifier
      operationId: generateProductPromotionId
      schemes:
      - https
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: requestQuantity
        in: query
        description: The quantity of ids to create if not specified only one
        required: false
        type: integer
        maximum: 1000
        minimum: 1
      responses:
        "200":
          description: |
            *OK* - The product promotion identifier was generated successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductPromotionId'
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles: 
        - D1_ProductInventoryManagement_systemCreateProductId
        private-roles:
        - D1P_ProductInventoryManagement_write
  /product/applyProductFromOrder:
    post:
      tags:
      - productFactory
      summary: Request to search for assigned products per a search creteria
      description: "This service creates or updates a bulk of products and their assigned promotion.\n**Mandatory&#58;**\n- ProductOrder.id (represnts the order which is the container for the assigned product)\n- Product.productRootId (represnts the root product in the produt tree)\n- Product.ProductOrderRef\n- Product.ProductOfferingRef (in case of product offer)\n- Product.ProductSpecificationRef (in case of product specification)\n- Product.BillingAccountRef\n- Product.RelatedPartyRef (role = Customer)        \n\n**Readonly&#58;**\n- Product.CharacteristicMetadata\n- Product.ProductOrderRef\n\n**Business rules&#58;**\n- modifyReason (action must match orderItem.action)\n- relatedParty (only 1 relatedRarty with role = Customer, and Customer status is Active)\n- billingAccount (relatedParty with role = Customer is a prerequisite, should be associated with the same Customer)\n- for enabled product should have Product.ExternalIdentifer  \n\n**Reference value&#58;**\n- channel (ApplicationContext)\n- relatedParty.role = Customer (Configuration.relatedPartyCustomerRole)\n- relatedParty status Active (Configuration.customerValidatorValidStatusValues)\n"
      operationId: applyProductFromOrder
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: validate
        in: query
        description: |
          The validation of the operation prior to persisting the results
        required: false
        type: boolean
        default: true
      - name: orderChange
        in: query
        description: |
          The order was changed after the product was created, although the orderitem exists. create new version
        required: false
        type: boolean
        default: false        
      - in: body
        name: ProductOrder
        description: |
          The bulk of product orders to be handled
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/ProductOrder'
          minItems: 1
      responses:
        200:
          description: |
            *Created* - The products were created successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-factory-service
        public-roles:
        - D1_ProductInventoryManagement_createProduct
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
      x-dox-Microservice: pi-factory-ms
  /productSearch:
    get:
      tags:
      - productInventorySearch
      summary: (Internal) Request to search for assigned products per a search creteria
      description: This operation searches for products in invenotry according to search creterias
      operationId: productSearch
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: filter
        in: query
        description: |
          The filter for the output records. The filter is used as follows filter=[attributeName][operator][value],[value][&|;]&|;][attributeName][operator][value],[value] The supported values and operators for the filter are as follows -product.id == product.primaryId ==  externalIdentifier.type== externalIdentifier.id==
          when provided time to analyzee will be longer than other retrive tasks
        required: false
        type: string
      - name: relatedPartyId
        in: query
        description: |
          The ID of the customer that has this assigned product
        required: false
        type: string
      - name: offset
        in: query
        description: |
          The requested paginated start index page
        required: false
        type: integer
      - name: limit
        in: query
        description: |
          The requested paginated maximum number of results per page
        required: false
        type: integer
      responses:
        200:
          description: |
            *OK* - The product was retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/product'
            minItems: 0
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-search-service
        private-roles:
        - D1P_ProductInventoryManagement_read
      x-dox-Microservice: pi-search-ms
      x-dox-InternalAPI: true
  /product/validate:
    post:
      tags:
      - productValidation
      summary: (Internal) This operation validates the product
      description: "This task validates a product by its identifier.    \n"
      operationId: validateProduct
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: validate
        in: query
        description: |
          The validation of the operation prior to persisting the results
        required: false
        type: boolean
        default: true
      - name: validationType
        in: query
        description: |
          The type of the validation. The type determines the type of validations that are performed. The parameter can be either empty or include a list of validation types (one or multiple), for example - Configuration, Customer, BillingAccount.
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - in: body
        name: Product
        description: |
          The product in the product inventory
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/product'
          minItems: 0
      responses:
        200:
          description: |
            *Validated* - The product order was validated successfully.
          schema:
            $ref: '#/definitions/Validation'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        412:
          description: |
            *Precondition Failed* - The server cannot complete the request due to
            the failure in the precondition validation of the resource.
          schema:
            $ref: '#/definitions/ValidationError'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-validateproduct-service
        private-roles:
        - D1P_ProductInventoryManagement_read
      x-dox-Microservice: pi-validateproduct-ms
      x-dox-InternalAPI: true
  /bulkImportNotification:
    get:
      tags:
      - product
      summary: Bulk import product
      description: |
        Notification which contains bulk import information.
      operationId: bulkImportNotification
      parameters: []
      responses:
        204:
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/BulkImportProductNotification'
      x-dox-Microservice: pi-bulk-operation-ms
      x-amdocs:
        route-service: pi-bulk-operation-ms
        private-roles:
        - D1P_ProductInventoryManagement_write
        - FndP_APIGateway_gw
  /serviceUpdateNotification:
    get:
      tags:
      - product
      summary: product patch notification
      description: |
        Notification which contains the service update within a product.
      operationId: serviceUpdateNotification
      parameters: []
      responses:
        "204":
          description: |
            *No Content*
          schema:
            $ref: '#/definitions/ServiceUpdateNotification'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        private-roles:
        - D1P_ProductInventoryManagement_write
        - FndP_APIGateway_gw
  /calculatePrice:
    post:
      tags:
      - price
      summary: (Internal) Recalculate the product price
      description: "This service encapsulates all pricing business to calculate the product price (re-quote).\nIt delegates the calculation of the price to the Product Price or the Product Quote microservice based on product pricing parameters. \n"
      operationId: calculatePrice
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Accept-Language
        in: header
        description: |
          Locale of the client
        required: false
        type: string
      - in: body
        name: PriceProduct
        description: |
          The prices for the product
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/PriceProduct'
      responses:
        200:
          description: |
            *OK* - The price for the product offering was found successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceProduct'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-price-ms
      x-dox-InternalAPI: true
      x-amdocs:
        route-service: pi-price-service
        private-roles:
        - D1P_ProductInventoryManagement_write
  /product/updateService:
    post:
      tags:
      - productInventoryManagement
      summary: Update internal fields with in the product
      description: "A request to update internal fields with in the product \n"
      operationId: updateService
      consumes:
      - application/json;charset
      produces:
      - application/json;charset
      parameters:
      - in: body
        name: updateService
        description: |
          The single product in the product inventory
        required: true
        schema:
          $ref: '#/definitions/UpdateService'
      responses:
        201:
          description: '*UPDATED* '
          schema:
            $ref: '#/definitions/product'
        400:
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        412:
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationErrorResponse'
        500:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        502:
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        503:
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProductService
        private-roles:
        - D1P_ProductInventoryManagement_write
      x-dox-Microservice: pi-product-ms
  /product/{productId}/queryResource:
    get:
      tags:
      - productInventoryManagement
      summary: Retrieve resources of the product
      description: |        
        "This service retrieves the resources of the product.\nIf a specific resource types were specified in the request - only those will be returned. \nIf a specific resource status was specified in the request - resoucres related to products in the rquested statuses will be returned, else - all product statuses will be considered as valid.  \n \n"
      operationId: queryResource
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          The locale of the client
        required: false
        type: string
      - name: resourceType
        in: query
        description: 'The resource type '
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: statuses
        in: query
        description: |
          The list of statuses for a product tree, used to set the status for the products in the tree
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      - name: productId
        in: path
        description: |
          The ID of the primary product
        required: true
        type: string
      responses:
        "200":
          description: |
            *OK* - The product versions were retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceRef'
            minItems: 0
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "503":
          description: |
            *Internal Server Error* - The server cannot fulfill the request due to a temporary overloading or maintenance of the server. Retry later.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        x-dox-NotImplemented: true
        public-roles:
        - D1_ProductInventoryManagement_retrieveProducts
        private-roles:
        - D1P_ProductInventoryManagement_read
        - FndP_APIGateway_gw
  /calculateDuration:
    post:
      tags:
      - calculateDuration
      summary: Calculate the duration end date according to specifc duration policy
      description: |
        This service provides the capabality to calculate duration end date for external consumer, based on a specific duraiton policy
      operationId: calculateDuration
      consumes:
      - application/json;charset=utf-8
      produces:
      - application/json;charset=utf-8
      parameters:
      - name: Accept-Language
        in: header
        description: |
          Locale of the client
        required: false
        type: string
      - in: body
        name: CalculateDuration
        description: |
          The relevant policy to be used to calculate the calculateEffectiveDate
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/CalculateDuration'
      responses:
        "200":
          description: |
            *OK* - The price for the product offering was found successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/CalculateDuration'
        "400":
          description: |
            *Bad Request* - The server cannot process the request due to a malformed
            syntax. The response can be caused by missing mandatory query
            parameters, invalid value in the query parameters, validation
            exceptions, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: |
            *Not Found* - The server did not find anything matching the request URI.
            The response can be caused by missing path parameters, invalid WEB
            resource, and so on.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "409":
          description: |
            *Conflict* - The server cannot complete the request due to a conflict
            with the current state of the resource.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "412":
          description: |
            *Unprocessable Entity* - The server understands the content type of the request entity, and the syntax of the request entity is correct, but was unable to process the contained instructions.
          schema:
            $ref: '#/definitions/ValidationErrorResponse'
        "500":
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
        "502":
          description: |
            *Bad Gateway* - The server encountered an unexpected condition when
            calling another service.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: |
            *Internal Server Error* - The server encountered an unexpected condition
            that prevented it from fulfilling the request.
          schema:
            $ref: '#/definitions/ErrorResponse'
      x-dox-Microservice: pi-product-ms
      x-amdocs:
        route-service: pi-product-service
        public-roles:
        - D1_ProductInventoryManagement_updateProductService
        private-roles:
        - D1P_ProductInventoryManagement_write
definitions:
  product:
    type: object
    properties:
      description:
        type: string
        description: |
          The description of the product - currently will be empty until source exists (TMF field)
      productId:
        type: string
        description: |
          The ID of the product, unique ID of the product which identify that specific resource
      alternateId:
        type: integer
        format: int64
        description: |
          The alternateID of the product, unique integer identifier for specific product, product may be retrieved also upon it
      href:
        type: string
        description: |
          The self-reference to the product
      isBundle:
        type: string
        description: |
          Indicates whether the product represents a bundle
      isCustomerVisible:
        type: boolean
        description: |
          Indicates whether a related party can view the product
      name:
        type: string
        description: "Name of the product. It could be the same as the name of the product offering.     \n"
      orderDate:
        type: string
        format: date-time
        description: |
          The date on which the order was created
      productSerialNumber:
        type: string
        description: |
          The serial number of the product
      startDate:
        type: string
        format: date-time
        description: "A date time (DateTime). Is the date from which the product has been created (current version). \n"
      status:
        type: string
        description: |
          The lifecycle status of the product
      statusChangeReason:
        type: array
        description: |
          The reason name of the product status change
        items:
          $ref: '#/definitions/StatusReason'
      statusChangeDate:
          type: string
          format: date-time
          description: |
            A date time (DateTime). Is the date from which the product status has been changed  
      previousStatus:
        description: |
          The lifecycle status of the product in previous version
        type: string            
      terminationDate:
        type: string
        format: date-time
        description: |
          The date when the termination action was performed on the product
      version:
        type: string
        description: |
          The version of the internal product, each change will create a new version (except change in dates and status)
      productRootId:
        type: string
        description: |
          The product ID of the root product, in the product tree, represent the top product offer
      pathToRoot:
        type: string
        description: |
          List of products that construct the product tree (comma sperated delimited)
      parentId:
        type: string
        description: |
          The product ID of the parent product order in the product tree
      quantity:
        type: integer
        description: |
          The quantity of the products. The quantity refers to non serialized products that are a part of the order.
      activationDate:
        type: string
        format: date-time
        description: |
          The date when the product is set to active. Order handling updates this field either on completion of the order or directly in the inventory
      primaryProductId:
        type: string
        description: |
          The ID of the primary product. The primary product is the first ancestor that is the business product offering. It is marked in the catalog as primary.
      relatedParty:
        type: array
        description: |
          The party associated with the product, the party has a role which determins its relation to the product (can be 'customer' or 'user')
        items:
          $ref: '#/definitions/RelatedPartyRef'
      characteristic:
        type: array
        description: |
          A list of product specification characteristics. Characteristics of the product to instantiate or to modify.
        items:
          $ref: '#/definitions/ProductCharacteristic'
      productOfferingCharacteristic:
        type: array
        description: |
          A list of product offer characteristics. Characteristics of the product to instantiate or to modify.
        items:
          $ref: '#/definitions/ProductCharacteristic'
      note:
        type: array
        description: |
          Extra information about the product order
        items:
          $ref: '#/definitions/Note'
      productRelationship:
        type: array
        description: 'A list of product relationships (ProductRelationship [*]). Represents a relationship between products - which potentially holds an entire product object or a product reference. '
        items:
          $ref: '#/definitions/ProductRelationship'
      productPrice:
        type: array
        description: 'A list of product prices. An amount, usually of money, that represents the actual price paid by a Customer for a purchase, a rent or a lease of a Product. The price is valid for a defined period of time. '
        items:
          $ref: '#/definitions/ProductPrice'
      productTotalPrice:
        type: array
        description: The total price to be paid accrodig to the price calculation done in ordering time
        items:
          $ref: '#/definitions/ProductPrice'
      place:
        type: array
        description: The list of useful locations for the product
        items:
          $ref: '#/definitions/PlaceRef'
      billingAccount:
        $ref: '#/definitions/BillingAccountRef'
      productOffering:
        $ref: '#/definitions/ProductOfferingRef'
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
      externalIdentifier:
        type: array
        description: |
          The ID of the external System that initiated the creation of the product document
        items:
          $ref: '#/definitions/ExternalIdentifier'
      channel:
        type: array
        description: |
          The list of channels in the product order
        items:
          $ref: '#/definitions/ChannelRef'
      productOrder:
        $ref: '#/definitions/ProductOrderRef'
      productTerm:
        type: array
        description: |
          The list of channels in the product order
        items:
          $ref: '#/definitions/ProductTerm'
      characteristicMetadata:
        type: array
        description: |
          The characteristics of the product
        items:
          $ref: '#/definitions/CharacteristicMetadata'
      productPromotion:
        type: array
        description: The list of promotions that the product is related to
        items:
          $ref: '#/definitions/ProductPromotionRef'
      nextAction:
        type: array
        description: The action to be performed on this product
        items:
          $ref: '#/definitions/NextAction'
      businessActivity:
        type: array
        description: Business Activity include dates that will be used by other system like billing, fulfilment, etc..
        items:
          $ref: '#/definitions/BusinessActivity'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: Productextensions
    description: "Product represents the subscription of a ProductOffering or ProductSpecification by a Party playing a PartyRole, such as a Customer. \n"
  StatusReason:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the modification reason
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: StatusReasonExtensions
    description: |
      The modification reason associated to the status of the product.
  RelatedPartyRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the related party
      href:
        type: string
        description: |
          Hypertext reference to the related party, could be a party reference or a party role reference
      name:
        type: string
        description: |
          Name of the related party
      role:
        type: string
        description: |
          Role played by the related party
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
      lastName:
        type: string
        description: |
          Last name of the related party
      firstName:
        type: string
        description: |
          First name of the related party
      phoneNumber:
        type: string
        description: |
          Phone number of the related party
      emailAddress:
        type: string
        description: |
          emailAddress of the related party
      segment:
        type: string
        description: |
          segment of the related party
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedPartyRefExtensions
        x-dox-NotImplemented: false
    description: |
      Party or party role that is linked to a specific entity
  ProductCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the product characteristic
      value:
        type: string
        description: |
          Value of the product characteristic
      valueType:
        type: string
        description: |
          Value type of the product characteristic
      '@type':
        type: string
        description: |
          Type of the resource - *ProductCharacteristic*
      characteristicMetadata:
        type: array
        description: |
          The characteristics of the product
        items:
          $ref: '#/definitions/CharacteristicMetadata'
      valueMetadata:
        type: array
        description: |
          Metadata of the product characteristic value
        items:
          $ref: '#/definitions/ValueMetadata'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductCharacteristicsextensions
    description: |
      The characteristic of the product and the value that is currently selected
  CharacteristicMetadata:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the metadata characteristic
      value:
        type: string
        description: |
          The value of the metadata characteristic
      metatype:
        type: string
        description: |
          The type of the metadata characteristic
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: CharacteristicMetadataExtensions
    description: |
      The catalog and operational metadata
  ValueMetadata:
    allOf:
    - $ref: '#/definitions/Metadata'
    - type: object
      properties:
        sourceValue:
          type: string
          description: |
            Value of the metadata source
        extensions:
          type: object
          additionalProperties:
            type: object
            properties: {}
          x-amdocs:
            refDefinition: ValueMetadataExtensions
          x-dox-NotImplemented: false
    description: |
      Catalog and operational metadata
  Metadata:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the metadata
      value:
        type: string
        description: |
          Value of the metadata
      metadataType:
        type: string
        description: |
          Type of the metadata
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: MetadataExtensions
        x-dox-NotImplemented: false
    description: |
      Catalog and operational metadata
  Note:
    type: object
    required:
    - text
    properties:
      id:
        type: string
        description: |
          Identifier of the note
        readOnly: true
      noteType:
        type: string
        description: |
          Type of the note
      date:
        type: string
        format: date-time
        description: |
          Date of the note
      text:
        type: string
        description: |
          Text of the note
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: NoteExtensions
        x-dox-NotImplemented: false
    description: |
      Extra information about a given entity
  ProductRelationship:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the relation to product (BusinessRelation, Bundle, Composite, EnabledBy)
      subType:
        type: string
        description: |
          The sub type of relation product
      product:
        $ref: '#/definitions/ProductRef'
      compositeProduct:
        type: array
        description: The relation between the product and its product specification, which is a product in the inventory on the same doc
        items:
          $ref: '#/definitions/product'
    description: |
      The relationship to the product
  ProductRef:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier of the product
      href:
        type: string
        description: The self-reference to the product
      place:
        type: array
        description: The list of useful locations for the product
        items:
          $ref: '#/definitions/PlaceRef'
      primaryProductId:
        type: string
        description: |
          The ID of the primary product. The primary product is the first ancestor that is the business product offering. It is marked in the catalog as isPrimary. It must be used when searching for the product in the inventory.
    description: ""
  PlaceRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the location
      href:
        type: string
        description: |
          The self-reference to the location
      name:
        type: string
        description: |
          The name of the location
      role:
        type: string
        description: |
          The role of the location
    description: |
      The location of the product
  ProductPrice:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product offering price
      name:
        type: string
        description: |
          The name of the product offering price
      description:
        type: string
        description: |
          The description of the product offering price
      priceType:
        type: string
        description: |
          The type of the price: recurring, one-time, or usage
      recurringChargePeriod:
        type: string
        description: |
          The period to which to repeat the application of the recurring price (either 'days???, 'weeks???, 'months???, or ???years???). This property is populated only if the price type is 'recurring???
      recurringChargePeriodLength:
        type: integer
        description: |
          The period length of the recurring charge
      unitOfMeasure:
        type: string
        description: |
          The unit of measurement of the product offering available at the offered
          price, such as minutes, GB, and so on
      priceAlteration:
        type: array
        description: |
          Alteration that impact the price
        items:
          $ref: '#/definitions/PriceAlteration'
      price:
        $ref: '#/definitions/Price'
      standalonePrice:
        $ref: '#/definitions/Price'
      finalPrice:
        $ref: '#/definitions/Price'
      immediatePayOption:
        $ref: '#/definitions/ImmediatePayOption'
      installmentOption:
        $ref: '#/definitions/InstallmentOption'
      productPriceRelationship:
        $ref: '#/definitions/ProductPriceRelationship'
      billingAccount:
        $ref: '#/definitions/BillingAccountRef'
      taxIncluded:
        type: string
        description: Indicates if the price is defined in the catalog one as tax included or as tax excluded. Valid Values - Excluded, Included
      role:
        type: string
        description: |
          The role of the price, for example, price, bundle price alteration, and so on
      priceOverrideOption:
        $ref: '#/definitions/PriceOverrideOption'
      prorationFactor:
        type: number
        format: double
        description: |
          Proration factor used to prorate this amount
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      chargeType:
        type: string
        description: "The charge type that the price represents. The supported values are&#58;<ul><li>debit<li>credit</ul> \n"
      relatedAppliedBillingRate:
        $ref: '#/definitions/RelatedAppliedBillingRateRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingPriceextensions
  PriceAlteration:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the price alteration
      description:
        type: string
        description: |
          The description of the price alteration
      priceType:
        type: string
        description: |
          The type of the price: recurring, one-time, or usage
      alterationType:
        type: string
      recurringChargePeriod:
        type: string
        description: |
          The type of the recurring charge period, such as month, week, and so on
      recurringChargePeriodLength:
        type: integer
        description: |
          The length of the recurring charge period
      unitOfMeasure:
        type: string
        description: |
          The unit representing how a product offering is available at the offered
          price, such as minutes, GB, and so on
      applicationDuration:
        type: integer
        description: |
          The duration of the price alteration on the product offering, for example: two months free of charge for the recurring charge
      priority:
        type: integer
        description: |
          The priority of the application
      promotionId:
        type: string
        description: |
          The ID of the promotion
      promotionActionId:
        type: string
        description: |
          The ID of the promotion action
      productPromotionId:
        type: string
        description: |
          The ID of the immediate promotion instance
      promotionCatalogId:
        type: string
        description: |
          The ID of the catalog promotion
      alterationProductOfferingPriceId:
        type: string
        description: |
          The catalog identifier of the product offering price representing this price alteration
      alterationBundleProductOfferingId:
        type: string
        description: |
          The catalog identifier of the bundle ProductOffering where this price alteration is attached. This identifier will be provided in the input as part of the PricingProductOffering heirarchy.
      alterationApplyOrder:
        type: integer
        description: "The the order of the alteration price applience on the price \n"
      chargeType:
        type: string
        description: "The charge type that the price alteration represents. The supported values are&#58;<ul><li>debit<li>discount<li>credit</ul> \n"
      price:
        $ref: '#/definitions/Price'
      prorationFactor:
        type: number
        format: double
        description: |
          Proration factor used to prorate this amount
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceAlterationextensions
  Price:
    type: object
    properties:
      taxIncludedAmount:
        $ref: '#/definitions/Money'
      dutyFreeAmount:
        $ref: '#/definitions/Money'
      taxAmount:
        $ref: '#/definitions/Money'
      taxRate:
        type: number
        format: float
      precentage:
        type: number
        format: float
      currencyCode:
        type: string
        description: |
          "currency type - depricated (currently exists in Money)"
      priceReduction:
        $ref: '#/definitions/Money'
      priceOverride:
        $ref: '#/definitions/Money'
      priceRecordId:
        type: string
        description: |
          The unique identifier of the price in the pricing domain.
      priceAlteration:
        type: array
        items:
          $ref: '#/definitions/PriceAlteration'
      impactingPriceParameter:
        type: array
        description: |
          The parameters that impact the price
        items:
          $ref: '#/definitions/PriceParam'
      appliedTax:
        type: array
        items:
          $ref: '#/definitions/AppliedTax'
        x-dox-NotImplemented: false
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: Priceextensions
        x-dox-NotImplemented: false
    description: |
      The price of current catalog item. It is set to null if the price record is
      missing or if there is any exception.
  Money:
    type: object
    properties:
      unit:
        type: string
        description: |
          The currency of the price
      value:
        type: number
        description: |
          The amount of the price
    description: |
      The price and currency of the catalog item
  PriceParam:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the parameter
      name:
        type: string
        description: |
          The name of the parameter
      value:
        type: string
        description: |
          The value of the parameter
    description: |
      The parameters that may impact/impact the price
  AppliedTax:
    type: object
    required:
    - taxAmount
    - taxDefinition
    - taxableAmount
    properties:
      taxDefinition:
        $ref: '#/definitions/TaxDefinition'
      taxAmount:
        $ref: '#/definitions/Money'
      taxableAmount:
        $ref: '#/definitions/Money'
      periodCoverage:
        $ref: '#/definitions/TimePeriod'
      characteristic:
        type: array
        items:
          $ref: '#/definitions/Characteristic'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: AppliedTaxExtensions
        x-dox-NotImplemented: false
    description: Calculated tax response
  TaxDefinition:
    type: object
    required:
    - exemptionType
    - isExemption
    - taxJurisdiction
    - taxRate
    - taxType
    - vaidFor
    properties:
      name:
        type: string
        description: The display name of tax type
      taxRate:
        type: number
        format: float
        description: Rate of tax
      taxType:
        type: string
        description: VAT/GST etc
      category:
        type: string
        description: Luxury/Standard etc
      isExemption:
        type: boolean
        description: Where the tax definition has exemption defined on it
      exemptionType:
        type: string
        description: Exemption type. Valid Values - Customer, Service, Jurisdiction, None.
      vaidFor:
        $ref: '#/definitions/TimePeriod'
      taxJurisdiction:
        $ref: '#/definitions/TaxJurisdiction'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: TaxDefinitionExtensions
        x-dox-NotImplemented: false
    description: Tax definition
  TimePeriod:
    type: object
    properties:
      startDateTime:
        type: string
        format: date-time
        description: |
          Start date and time of the period
      endDateTime:
        type: string
        format: date-time
        description: |
          End date and time of the period
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: TimePeriodExtensions
        x-dox-NotImplemented: false
    description: |
      Time period
  TaxJurisdiction:
    type: object
    required:
    - level
    - name
    properties:
      name:
        type: string
      level:
        type: string
      id:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: TaxJurisdictionExtensions
        x-dox-NotImplemented: false
  Characteristic:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueType:
        type: string
        description: |
          Value type of the characteristic
        x-dox-NotImplemented: false
  ImmediatePayOption:
    type: object
    properties:
      payOption:
        type: string
        description: |
          The immediate pay option:
          <ul>
          <li> *MUST* - The price must be paid immediately
          <li> *MAY* - The price might be paid immediately
          </ul>
      payAmount:
        $ref: '#/definitions/Money'
      minPayAmount:
        $ref: '#/definitions/Money'
      payImmediately:
        type: boolean
        description: |
          Indicates whether the prcie included in the immediate payment.
          If the pay option is set to MUST, this indication is set to true.
          If the pay option is set to MAY, this indication is set to either true or false based on a customer decission.
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ImmediatePayOptionextensions
    description: |
      The payment options for the product offering price payment. The payment options can indicate whether the price must or might be paid immediatelly.
      In addition, the payment options include an indication whether the price should be included in the immediate payment or not.
      If the payment option is set to must, this indication is set to true. Otherwise, if the payment option is set to might, the indication is set to either
      true or false based on a customer decission.
    x-dox-NotImplemented: false
  InstallmentOption:
    type: object
    properties:
      id:
        type: string
        description: |
          The identifier of the installment option
      numberOfInstallments:
        type: integer
        description: |
          The number of installments
      downPayment:
        $ref: '#/definitions/PaymentAmount'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductInstallmentextensions
    description: |
      Represents an installment option for an order price
  PaymentAmount:
    type: object
    properties:
      amount:
        $ref: '#/definitions/Money'
      percentage:
        type: number
        format: float
        description: |
          Represents the percentage that the amount represents out of the price
      taxIncludedAmount:
        $ref: '#/definitions/Money'
      dutyFreeAmount:
        $ref: '#/definitions/Money'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PaymentAmountExtensions
        x-dox-NotImplemented: false
    description: |
      Represents a payment amount
  ProductPriceRelationship:
    type: object
    required:
    - id
    - type
    properties:
      id:
        type: string
        description: |
          The identifier of the related PricingProductOfferingPrice entity
      type:
        type: string
        description: |
          The relation type
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingPriceRelationshipextensions
        x-dox-NotImplemented: false
    description: |
      The relation between PricingProductOfferingPrice entities
  BillingAccountRef:
    properties:
      id:
        type: string
        description: |
          The unique ID of the product offering
      name:
        type: string
        description: |
          The name of the product offering
      href:
        type: string
        description: |
          The self-reference to the product offering
  PriceOverrideOption:
    type: object
    properties:
      overrideType:
        type: string
        description: |
          Indicates which override option the CSR can apply. Valid Values : waive, absolute, increase, decrease
      overrideValue:
        description: "The override amount or percent.  \n"
        $ref: '#/definitions/PaymentAmount'
      validFor:
        description: |
          Time validity of the price override
        $ref: '#/definitions/TimePeriod'
      relatedParty:
        description: |
          Party (user) associated with the product order price override
        $ref: '#/definitions/RelatedPartyRef'
      reason:
        description: |
          The Reason of the product order price override
        $ref: '#/definitions/Reason'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PriceOverrideOptionExtensions
        x-dox-NotImplemented: false
    description: |
      The waive and override data of a price
  Reason:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      reasonText:
        type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ReasonExtensions
        x-dox-NotImplemented: false
    description: "The reason for the action \n"
  RelatedAppliedBillingRateRef:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the applied billing rate
      href:
        type: string
        description: |
          Hypertext reference to the applied billing rate
      '@referredType':
        type: string
        description: "Type of the applied billing rate, for example, *AppliedCustomerBillingOneTimeCharge* or *AppliedCustomerBillingRecurringCharge*    \n"
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: RelatedAppliedBillingRateRefExtensions
        x-dox-NotImplemented: true
    description: |
      Relation to another applied billing rate
  ProductOfferingRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product offering
      name:
        type: string
        description: |
          The name of the product offering
      href:
        type: string
        description: |
          The self-reference to the product offering
      type:
        type: string
        description: |
          The type of the product offering
      typeGroup:
        type: string
        description: |
          The type group of the product offering
      classification:
        type: string
        description: |
          The classification of the product offering. Valid values: customerOffer, subscriberMainOffer, subscriberOffer
      version:
        type: string
        description: |
          The version of the product offering
      primary:
        type: boolean
        description: |
          describes the business product
      valueRank:
        type: integer
        description: |
          The value rank of the product offering
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
    description: |
      The reference to the product offering
  DurationPolicy:
    type: object
    properties:
      duration:
        $ref: '#/definitions/Quantity'
      startDatePolicy:
        type: string
        description: |
          The policy from which date to calculate the duration
      endDatePolicy:
        type: string
        description: |
          The policy to which date to calculate the duration
      terminationPolicy:
        type: string
        description: |
          Defines the termination policy upon duration end date
      effectiveFor:
        $ref: '#/definitions/TimePeriod'
    description: "The policy for calculte limited product / promotion duration \n"
  Quantity:
    type: object
    properties:
      units:
        type: string
        description: |
          Units that are associated with the quantity
      amount:
        type: number
        description: |
          Amount that is associated with the quantity
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: QuantityExtensions
        x-dox-NotImplemented: false
    description: |
      Quantity of a resource
  ProductSpecificationRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product specification
      href:
        type: string
        description: |
          The unqiue self-reference to the product specification
      name:
        type: string
        description: |
          The name of the product specification
      type:
        type: string
        description: |
          The type of the product specification
      version:
        type: string
        description: |
          The version of the product specification
    description: |
      The reference to the product specification
  ExternalIdentifier:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the external system
      id:
        type: string
        description: |
          The unique ID of the external system
      version:
        type: string
        description: |
          The version of the external system that created the order
    description: |
      The reference to the external identifier of the external system that created the order
  ChannelRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the channel
      href:
        type: string
        description: |
          The self-reference to the channel
      name:
        type: string
        description: |
          The name of the channel
    description: |
      The channel of the product order
  ProductOrderRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the order
      href:
        type: string
        description: |
          The self-reference to the order
      productOrderItemId:
        type: string
        description: |
          The ID of the order item
      productOrderItemAction:
        type: string
        description: |
          The action of the order item - Depricated
      productOrderItemReason:
        type: string
        description: |
          The reason for the order item - Depricated
      modifyReason:
        type: array
        description: |
          The action and its reason as was captured by Order
        items:
          $ref: '#/definitions/ModifyReason'
    description: |
      The product order in which the product was created
  ModifyReason:
    type: object
    required:
    - action
    - name
    properties:
      name:
        type: string
        description: |
          The name of the modification reason
      reasonText:
        type: string
        description: "The text of the modification reason. \n"
      action:
        type: string
        description: |
          The action performed on the instance of the product offering
    description: |
      The modification reason associated to the action performed on the
      product offering associated with the order item
  ProductTerm:
    type: object
    properties:
      name:
        type: string
        description: "The name of the term \n"
      type:
        type: string
        description: |
          The type of the product term, such as commitment
      description:
        type: string
        description: |
          The description of the term
      freezeDate:
        type: string
        format: date-time
        description: |
          The time in which the term is frozen
      impactType:
        type: string
        description: "The type of the impact on the term of the product due to some action performed on the product  \n"
      policyId:
        type: string
        description: |
          The ID of the policy that is used in the catalog to handle the term
      duration:
        $ref: '#/definitions/Quantity'
      remainingDuration:
        $ref: '#/definitions/Quantity'
      elapsedDuration:
        $ref: '#/definitions/Quantity'
      validFor:
        $ref: '#/definitions/validFor'
      characteristicMetadata:
        type: array
        description: |
          The characteristics of the product
        items:
          $ref: '#/definitions/CharacteristicMetadata'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductTermextensions
    description: |
      The terms of the product as they were captured during ordering
  validFor:
    type: object
    properties:
      fromDate:
        type: string
        format: date-time
      toDate:
        type: string
        format: date-time
  ProductPromotionRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the promotion instance in inventory
      href:
        type: string
        description: |
          The self-reference to the promotion
      productQualificationType:
        type: string
        description: |
          The qualification type of the promotion - either benefit product or trigger product - DEPRECATED
    description: |
      The reference to the product promotion
  NextAction:
    type: object
    properties:
      type:
        type: string
        description: the type of the duration
      action:
        type: string
        description: the action which relates to the reason
      calculateEffectiveDate:
        type: string
        format: date-time
        description: the designated date for the next action to occur
      modifyReason:
        $ref: '#/definitions/ModifyReason'
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
  BusinessActivity:
    type: object
    properties:
      name:
        type: string
        description: the name of the business activty
      effectiveDate:
        type: string
        format: date-time
        description: the date of the business activty
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: BusinessActivityExtensions
    description: |
      Business Activity include dates that will be used by other system like billing, fulfilment, etc..
  ErrorResponse:
    type: object
    required:
    - code
    - reason
    discriminator: '@type'
    properties:
      code:
        type: string
        description: |
          The code of the response
      reason:
        type: string
        description: |
          Explanation of the reason for the error which can be shown to a client user
      message:
        type: string
        description: |
          The response text
      status:
        type: string
        description: |
          HTTP Error code extension
      link:
        type: string
        format: url
        description: |
          The reference to the item
          `deprecated`
      rel:
        type: string
        description: |
          The relation type of the item
          `deprecated`
        default: help
      referenceError:
        type: string
        format: uri
        description: |
          URI of documentation describing the error
      traceId:
        type: string
        description: |
          The unique tracker ID used to facilitate troubleshooting
      characteristics:
        type: array
        description: |
          The relevant parameters consumer need which are associated with this error
        items:
          $ref: '#/definitions/Characteristics'
    description: |
      "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)""
  Characteristics:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
    description: |
      List of relevant parameters consumer need which are associated with this entity
  statusList:
    type: object
    properties:
      productId:
        type: string
        description: |
          The IDs of the products in the list for changing the status
      version:
        type: string
        description: |
          The changed version for the status
    description: |
      The total altered price for the order and order items as they were calculated for the order
  PatchElement:
    properties:
      op:
        type: string
        description: |
          Operation that is associated with the patched resource part. Valid values are *add*, *remove*, or *replace*.
      path:
        type: string
        description: |
          Path of this resource part within the patched resource, for example, */note*, */name*, or */orderItem/quantity*
      value:
        type: object
        description: |
          Value of the patched resource part
        properties: {}
    description: |
      Patched resource part
  EnablingProduct:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the product
      status:
        type: string
        description: |
          The lifecycle of the product
      productSpecificationType:
        type: string
        description: |
          The catalog type of the product specification
      productSpecificationId:
        type: string
        description: |
          The catalog id of the product specification
      primaryProductId:
        type: string
        description: |
          The ID of the primary product. The primary product is the first ancestor that is the business product offering. It is marked in the catalog as isPrimary.
      pathToRoot:
        type: string
        description: "List of products that construct the product tree (comma sperated delimited)          \n"
    description: |
      The product
  ManageProductDate:
    type: object
    properties:
      innerProductId:
        type: string
        description: |
          The ID of the product being updated with the dates
      action:
        type: string
        description: |
          The action performed on the order item - add, remove, or replace
      productDate:
        type: array
        items:
          $ref: '#/definitions/ProductDate'
    description: |
      The management of the product dates required [type,action]
  ProductDate:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the date field
      value:
        type: string
        format: date-time
        description: |
          The value of the date field
    description: |
      Thedate of the product to update
  ProductPromotion:
    type: object
    properties:
      id:
        type: string
        description: "The ID of the product promotion \n"
      href:
        type: string
        description: "The self reference of the product promtion \n"
      immediatePromotionId:
        type: string
        description: |
          The id of the immediate promotion - engine promotion created- as defined for Order
      previousPromotionId:
        type: string
        description: "The id of the product promotion instance - Product promotion \n"
      status:
        type: string
        description: |
          The lifecycle of the product promotion
      startDate:
        type: string
        format: date-time
        description: "The date the current product promotion instance was created \n"
      lastUpdate:
        type: string
        format: date-time
        description: "The date the current product promotion was updated \n"
      promotion:
        $ref: '#/definitions/PromotionRef'
      productPromotionCharacteristics:
        type: array
        items:
          $ref: '#/definitions/ContextCharacteristic'
      appliedBy:
        $ref: '#/definitions/RelatedPartyRef'
      appliedReason:
        $ref: '#/definitions/ModifyReason'
      relatedParty:
        $ref: '#/definitions/RelatedPartyRef'
      benefitProduct:
        type: array
        description: |
          The benefit product that recieved that promotion
        items:
          $ref: '#/definitions/BenefitProduct'
      triggerProduct:
        type: array
        description: |
          The trigger product that caused to recieve that promotion
        items:
          $ref: '#/definitions/TriggerProduct'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ProductPromotionextensions
    description: |
      The product promotion
  PromotionRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the promotion
      name:
        type: string
        description: |
          The name of the promotion
      description:
        type: string
        description: |
          The description of the promotion for a business user
      type:
        type: string
        description: |
          The type of the promotion
      validFor:
        $ref: '#/definitions/TimePeriod'
      priority:
        type: integer
        description: |
          The priority of the promotion
      href:
        type: string
        format: url
        description: |
          The self-reference to the item
        readOnly: true
      applyPolicy:
        type: string
        description: "Defines the policy to apply the promotion - can be manual or automatic \n"
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionRefExtensions
        x-dox-NotImplemented: false
    description: |
      The reference to the definition of a promotion
  ContextCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the characteristic
      contextType:
        type: string
        description: |
          The context type of the characteristic
      valueType:
        type: string
        description: |
          The value type of the characterisitic
      value:
        type: array
        description: |
          The value of the characteristic
        items:
          type: string
    description: |
      The reference to the context definition of the rule
  BenefitProduct:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product
      href:
        type: string
        description: |
          The self-reference to the existing product
      itemType:
        type: string
        description: |
          Type of the benefit product. Valid values are 'product' and 'nonRetainedProduct'. In case of 'nonRetainedProduct' only partial data is stored (meaning, no id related feilds are populated, such as id, primaryProductId, pathToRoot)
      primaryProductId:
        type: string
        description: |
          The primary product ID (document ID) of the related product
      promotionCriteriaGroupId:
        type: string
        description: |
          identifier of the promotion criteria group (root or nested) as part of which this item is qualified as Benefit item
      pathToRoot:
        type: string
        description: |
          path from the current item in the Product Offering structure to the root. Populated in case Benefit Item is nested item.
      itemStatus:
        type: string
        description: |
          status os the promotion can be add, revoke or keep
      itemState:
        type: string
        description: "state valida values\n- applied \n- notApplied\n- partiallyApplied\n- pendingApply\n"
      relatedPromotionAction:
        type: array
        description: |
          The related promotion action of the benefit product
        items:
          $ref: '#/definitions/PromotionAction'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: BenefitProductextensions
    description: |
      The product that benefits from the promotion
  PromotionAction:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of an existing product
      name:
        type: string
        description: |
          The name of the action
      description:
        type: string
        description: |
          The description of the action
      actionType:
        type: string
        description: |
          The type of the action (priceAlteration, productOfferingBenefit)
      actionValue:
        type: string
        description: |
          The value of the action (amount)
      duration:
        $ref: '#/definitions/Quantity'
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
      actionStatus:
        type: string
        description: |
          The lifecycle status of the action
      validFor:
        $ref: '#/definitions/TimePeriod'
      actionTerminationPolicy:
        type: string
        description: |
          Defines the termination policy upon duration end date
      promotionPriceAlteration:
        $ref: '#/definitions/ProductOfferingPriceRef'
      productOfferingBenefit:
        type: array
        description: |
          Reference to a product offering usaed as a free offer benefit by the promotion
        items:
          $ref: '#/definitions/ProductOfferingBenefit'
      relatedTriggerProduct:
        type: array
        description: "An optional relation from a specific qualified promotion action to a specific trigger item. For promotion action with actionType = productOffering and actionObjectRef pointing to one of the criteria groups, this relation indicates a relevant trigger item to which the action should be subscription related. \n"
        items:
          $ref: '#/definitions/RelatedTriggerProduct'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PromotionActionextensions
    description: |
      The promotion action of the assigned promotion, the duration field is depricated, duration was moved to the duration policy entity
  ProductOfferingPriceRef:
    properties:
      id:
        type: string
        description: |
          Unique identifier of the product offering price
    description: |
      Reference to the action discount. Represents a pricing entity that defines the actual discount for the product offering.
  ProductOfferingBenefit:
    type: object
    properties:
      productOfferingId:
        type: string
        description: |
          the id of the product offering granted as a benefit
      promotionPriceAlteration:
        type: array
        description: |
          referecne to price entity representing the actual monetary discount
        items:
          $ref: '#/definitions/ProductOfferingPriceRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ProductOfferingBenefitExtensions
        x-dox-NotImplemented: true
    description: Reference to a product offering used as a free offer benefit by the promotion
  RelatedTriggerProduct:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the related trigger item
      role:
        type: string
        description: |
          The role of the related trigger item
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: RelatedTriggerItemExtensions
        x-dox-NotImplemented: true
    description: |
      A relation to a specific trigger item. For example, for promotion action with actionType = productOffering, this relation indicates a relevant trigger item to which the action should be related. The type of the relation is specified in 'role' field
  TriggerProduct:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of an existing product
      href:
        type: string
        description: |
          The self-reference to the existing product
      itemType:
        type: string
        description: |
          Type of the trigger product. Valid values are 'product' and 'nonRetainedProduct'. In case of 'nonRetainedProduct' only partial data is stored (meaning, no id related feilds are populated, such as id, primaryProductId, pathToRoot)
      primaryProductId:
        type: string
        description: |
          The primary product ID (document ID) of the related product
      promotionCriteriaGroupId:
        type: string
        description: |
          identifier of the promotion criteria group (root or nested) as part of which this item is qualified as trigger item
      pathToRoot:
        type: string
        description: |
          path from the current item in the Product Offering structure to the root. Populated in case trigger Item is nested item.
      itemStatus:
        type: string
        description: |
          status os the promotion can be add, revoke or keep
      triggerProductCharacteristic:
        type: array
        items:
          $ref: '#/definitions/ContextCharacteristic'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: TriggerProductextensions
    description: |
      The product that triggers the assigned promotion
  ProductId:
    type: object
    properties:
      id:
        type: string
        description: The unique ID of the order item
  ProductPromotionId:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of the product promotion
  ProductOrder:
    type: object
    properties:
      orderId:
        type: string
        description: |
          The ID of the product order that contains the order item
      OrderItem:
        type: array
        description: |
          The order item
        items:
          $ref: '#/definitions/OrderItem'
    description: |
      The order which contains the order item, that captures the data of the customer-owned product modification
  OrderItem:
    type: object
    properties:
      id:
        type: string
        description: |
          The ID of the order item
      state:
        type: string
        description: |
          The state of the order item
    description: "The order item that was modified \n"
  Validation:
    type: object
    properties:
      status:
        type: string
        description: |
          Validation status
        readOnly: true
      validationMessage:
        type: array
        description: |
          Validation message
        readOnly: true
        items:
          $ref: '#/definitions/ValidationMessage'
      configurationChange:
        type: array
        description: |
          Configuration change
        readOnly: true
        items:
          $ref: '#/definitions/ConfigurationChange'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ValidationExtensions
        x-dox-NotImplemented: false
    description: |
      Validation result that is associated with the product
  ValidationMessage:
    type: object
    properties:
      id:
        type: string
        description: |
          Non-localized name identifier of the validation message
      text:
        type: string
        description: |
          Localized descriptive validation message
      type:
        type: string
        description: |
          Type of the validation message
      subtype:
        type: string
        description: |
          Distinct code which represents the issue
      parameter:
        type: array
        description: |
          Name/value pair of the validation message
        items:
          $ref: '#/definitions/ValidationMessageParameter'
      severity:
        type: string
        description: |
          Severity of the validation message
      path:
        type: string
        description: |
          Path to the resource part to which the validation message is related
      resource:
        type: array
        description: |
          Resource that is associated with the message
        items:
          $ref: '#/definitions/RelatedResource'
    description: |
      Message associated with the validation failure
  ValidationMessageParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the parameter
      value:
        type: array
        description: |
          Value of the parameter
        items:
          type: string
    description: |
      Name/value pair of the validation message parameter
  RelatedResource:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the resource
      id:
        type: string
        description: |
          Unique identifier of the resource
      variable:
        type: array
        description: |
          Variables related to the resource
        items:
          $ref: '#/definitions/Variable'
      containedResource:
        type: array
        description: |
          Other resources, specs, or offers that are linked to the message but did not trigger the validation message
        items:
          $ref: '#/definitions/ContainedResource'
    description: |
      Resource that is associated with the validation message (that is, triggered the validation failure)
  Variable:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the variable
      id:
        type: string
        description: |
          Unique identifier of the variable
      value:
        type: array
        description: |
          Value(s) of the variable
        items:
          type: string
    description: |
      Variable that is associated with a resource
  ContainedResource:
    type: object
    properties:
      type:
        type: string
        description: |
          Type of the resource
      id:
        type: string
        description: |
          Unique identifier of the resource
      variable:
        type: array
        description: |
          Variables that are related to the resource
        items:
          $ref: '#/definitions/Variable'
    description: |
      Resources that are contained in the validation message
  ConfigurationChange:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier of the configuration change
        readOnly: true
        x-dox-DesignNote: |
          A unique identifier of the validation rule or its message.
      text:
        type: string
        description: |
          Localized descriptive configuration change message
        readOnly: true
      type:
        type: string
        description: |
          Implementation discriminator of the configuration change
        readOnly: true
      parameter:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/ConfigurationChangeParameter'
      severity:
        type: string
        description: |
          Severity of the configuration change
        readOnly: true
      path:
        type: string
        description: |
          Path to the configuration change in the resource model
        readOnly: true
      skipRevalidation:
        type: boolean
        description: |
          Indicates whether revalidation of the configuration change is required
        readOnly: true
      patchElement:
        type: array
        items:
          $ref: '#/definitions/PatchElement'
      configurationChangeSource:
        type: array
        description: |
          Holds a list of the impacting components that are involved in action rule
          - enablmentRelation - The action rule has impacting enablment relation functionality or was created by this functionality.
          - commertialRelation - The action rule has impacting commertial relation functionality or was created by this functionality.
          - subscriptionRelation - The action rule has impacting subscription relation or was created by this functionality. functionality
          - catalog - The action rule was created by catalog.
        items:
          type: string
        x-dox-NotImplemented: true
      configurationChangeContext:
        type: array
        description: |
          Indicates what is the target context of the action rule
          - cart
          - order
          - inventory
          - productOffering
        items:
          type: string
        x-dox-NotImplemented: true
    description: |
      Configuration change recommended for a validated resource
  ConfigurationChangeParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the parameter
        readOnly: true
      value:
        type: array
        description: |
          Value(s) of the parameter
        readOnly: true
        items:
          type: string
    description: |
      Name/value pair of the configuration change parameters
  ValidationError:
    allOf:
    - $ref: '#/definitions/Error'
    - properties:
        validationMessage:
          type: array
          description: |
            The validation messages
          items:
            $ref: '#/definitions/ValidationMessage'
    description: |
      Validation error object that is used when an API throws an error, typically with a HTTP error response code 422
  Error:
    type: object
    required:
    - code
    - reason
    discriminator: '@type'
    properties:
      code:
        type: string
        description: |
          Error code relevant to an application, defined in the API or in a common list
      reason:
        type: string
        description: |
          Explanation of the reason for the error that can be displayed to a user
      message:
        type: string
        description: |
          Additional information about the error  and corrective actions related to the error that can be displayed to a user
      status:
        type: string
        description: |
          HTTP error code extension
      referenceError:
        type: string
        format: uri
        description: |
          URI of the documentation describing the error
      traceId:
        type: string
        description: |
          Unique tracker ID that is used to facilitate the troubleshooting
      '@type':
        type: string
        description: |
          Type of the error
      characteristic:
        type: array
        description: |
          Charachteristic parameters that are associated with the error
        items:
          $ref: '#/definitions/ErrorCharacteristic'
    description: |
      Error response. This object is used when an API throws an error, typically with a HTTP error response codes 3xx, 4xx, and 5xx
  ErrorCharacteristic:
    type: object
    properties:
      name:
        type: string
        description: |
          Non-localized name identifier of the characteristic
      value:
        type: string
        description: |
          Value of the characteristic
    description: |
      Parameter that is associated with the error entity
  BulkImportProductNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/ImportProductEvent'
  Notification:
    type: object
    discriminator: eventType
    properties:
      eventId:
        type: string
        description: |
          Identifier of the event
      eventTime:
        type: string
        description: |
          Creation date of the event
      eventType:
        type: string
        description: |
          Name of the notification resource
      headers:
        type: object
        description: |
          Addiitonal data added to the event
        additionalProperties:
          type: string
          x-amdocs:
            refDefinition: EventHeaders
    description: |
      Notification structure containing the generic fields.
      This notification structure owns an event structure (*SpecificEvent* placeholder) linked to the resource concerned by the notification using the resource name as access field (*resourceName* placeholder).
  ImportProductEvent:
    type: object
    properties:
      correlationId:
        type: string
        description: correlation id to link all related messages (not mandatory)
      dataStartegy:
        type: string
        description: strategy to group information per configuration - currently according to customer, if none will send it resource by resource
      businessDataFields:
        $ref: '#/definitions/ImportProductEvent_businessDataFields'
      chunkGroupId:
        type: string
        description: Identifier of the chuck group (in case chunked event)
      chunkIndexEvent:
        type: string
        description: chunk number in case event is large, information shall be accumulated on the receiving party (in case chunked event)
      chunkTotalEvent:
        type: string
        description: number of chunks in that event (in case chunked event)
      product:
        type: array
        items:
          $ref: '#/definitions/product'
      productPromotion:
        type: array
        items:
          $ref: '#/definitions/ProductPromotion'
  ServiceUpdateNotification:
    allOf:
    - $ref: '#/definitions/Notification'
    - type: object
      properties:
        event:
          $ref: '#/definitions/UpdateService'
  UpdateService:
    type: object
    properties:
      identifierType:
        type: string
        description: |
          The type of product idntifier to be used to find the product (primary). Can be productId (recommended), externalIdentifier (recommended), characteristic. The characteristic used for identifier should marked in metadata ServiceID (not recommended requires different KPI)
      productIdentifier:
        type: string
        description: |
          The identifier value to be used to find the product
      innerProductId:
        type: string
        description: "The nested identifier value to be used to find the product if multiple product of the same type in the primary product tree.   \n"
      serviceAttributeUpdate:
        type: array
        items:
          $ref: '#/definitions/ServiceAttributeUpdate'
    description: |
      The product service to be updated
  ServiceAttributeUpdate:
    type: object
    properties:
      updateType:
        type: string
        description: |
          The updateType determines which product attributes can be updated, e.g. characteristics, state, activationDate etc. The updateTypes are configured, updateTypes are productCharacteristics, product.activationDate
      attributeName:
        type: string
        description: |
          The name of the attribute to be updated
      AttributeValue:
        type: string
        description: |
          The new value to be updated
    description: |
      The product service attribute and value to be updated
  PriceProduct:
    type: object
    properties:
      description:
        type: string
        description: |
          The description of the product
      productId:
        type: string
        description: |
          The ID of the product, unique ID of the product which identify that specific resource
      alternateId:
        type: integer
        format: int64
        description: |
          The alternateID of the product, unique integer identifier for specific product, product may be retrieved also upon it
      href:
        type: string
        description: |
          The self-reference to the product
      isBundle:
        type: string
        description: |
          Indicates whether the product represents a bundle
      isCustomerVisible:
        type: boolean
        description: |
          Indicates whether a related party can view the product
      name:
        type: string
        description: "Name of the product. It could be the same as the name of the product offering.     \n"
      orderDate:
        type: string
        format: date-time
        description: |
          The date on which the order was created
      productSerialNumber:
        type: string
        description: |
          The serial number of the product
      startDate:
        type: string
        format: date-time
        description: "A date time (DateTime). Is the date from which the product has been created (current version). \n"
      status:
        type: string
        description: |
          The lifecycle status of the product
      statusChangeReason:
         type: array
         description: |
          The reason name of the product status change
         items:
          $ref: '#/definitions/StatusReason'
      terminationDate:
        type: string
        format: date-time
        description: |
          The date when the termination action was performed on the product
      version:
        type: string
        description: |
          The version of the internal product, each change will create a new version (except change in dates and status)
      productRootId:
        type: string
        description: |
          The product ID of the root product, in the product tree, represent the top product offer
      pathToRoot:
        type: string
        description: |
          List of products that construct the product tree (comma sperated delimited)
      parentId:
        type: string
        description: |
          The product ID of the parent product order in the product tree
      quantity:
        type: integer
        description: |
          The quantity of the products. The quantity refers to non serialized products that are a part of the order.
      activationDate:
        type: string
        format: date-time
        description: |
          The date when the product is set to active. Order handling updates this field either on completion of the order or directly in the inventory
      primaryProductId:
        type: string
        description: |
          The ID of the primary product. The primary product is the first ancestor that is the business product offering. It is marked in the catalog as primary.
      relatedParty:
        type: array
        description: |
          The party associated with the product, the party has a role which determins its relation to the product (can be 'customer' or 'user')
        items:
          $ref: '#/definitions/RelatedPartyRef'
      characteristic:
        type: array
        description: |
          A list of product specification characteristics. Characteristics of the product to instantiate or to modify.
        items:
          $ref: '#/definitions/ProductCharacteristic'
      productOfferingCharacteristic:
        type: array
        description: |
          A list of product offer characteristics. Characteristics of the product to instantiate or to modify.
        items:
          $ref: '#/definitions/ProductCharacteristic'
      productRelationship:
        type: array
        description: 'A list of product relationships (ProductRelationship [*]). Represents a relationship between products - which potentially holds an entire product object or a product reference. '
        items:
          $ref: '#/definitions/PriceProductRelationship'
      message:
        type: array
        items:
          $ref: '#/definitions/PriceMessage'
      promotionAction:
        type: array
        items:
          $ref: '#/definitions/PricePromotionAction'
      productPrice:
        type: array
        description: 'A list of product prices. An amount, usually of money, that represents the actual price paid by a Customer for a purchase, a rent or a lease of a Product. The price is valid for a defined period of time. '
        items:
          $ref: '#/definitions/ProductPrice'
      productTotalPrice:
        type: array
        description: The total price to be paid accrodig to the price calculation done in ordering time
        items:
          $ref: '#/definitions/ProductPrice'
      place:
        type: array
        description: The list of useful locations for the product
        items:
          $ref: '#/definitions/PlaceRef'
      billingAccount:
        $ref: '#/definitions/BillingAccountRef'
      productOffering:
        $ref: '#/definitions/ProductOfferingRef'
      productSpecification:
        $ref: '#/definitions/ProductSpecificationRef'
      productTerm:
        type: array
        description: |
          The list of channels in the product order
        items:
          $ref: '#/definitions/ProductTerm'
      characteristicMetadata:
        type: array
        description: |
          The characteristics of the product
        items:
          $ref: '#/definitions/CharacteristicMetadata'
      productPromotion:
        type: array
        description: The list of promotions that the product is related to
        items:
          $ref: '#/definitions/ProductPromotionRef'
      businessActivity:
        type: array
        description: Business Activity include dates that will be used by other system like billing, fulfilment, etc..
        items:
          $ref: '#/definitions/BusinessActivity'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PriceProductExtensions
    description: "Product represents the subscription of a ProductOffering or ProductSpecification by a Party playing a PartyRole, such as a Customer. \n"
  PriceProductRelationship:
    type: object
    properties:
      type:
        type: string
        description: |
          The type of the relation to product (BusinessRelation, Bundle, Composite, EnabledBy)
      subType:
        type: string
        description: |
          The sub type of relation product
      product:
        $ref: '#/definitions/ProductRef'
      compositePriceProduct:
        type: array
        description: The relation between the product price and its decedents product prices, which is a product in the inventory on the same doc
        items:
          $ref: '#/definitions/PriceProduct'
    description: |
      The relationship to the product
  PriceMessage:
    type: object
    properties:
      type:
        type: string
        description: |
          Implementation discriminator
        readOnly: true
      text:
        type: string
        description: |
          Localized descriptive validation message
        readOnly: true
      path:
        type: string
        description: |
          Path to the nested product order price
        readOnly: true
      severity:
        type: string
        description: |
          Message severity
        readOnly: true
      parameter:
        type: array
        description: |
          Message parameter
        readOnly: true
        items:
          $ref: '#/definitions/PriceMessageParameter'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PriceMessageExtensions
        x-dox-NotImplemented: false
    description: |
      Message related to the product order price
  PriceMessageParameter:
    type: object
    properties:
      name:
        type: string
        description: |
          Name of the parameter
        readOnly: true
      value:
        type: array
        description: |
          Value(s) of the parameter
        readOnly: true
        items:
          type: string
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: PriceMessageParameterExtensions
        x-dox-NotImplemented: false
    description: |
      Name/value pair of the message parameter
  PricePromotionAction:
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID of an existing product
      name:
        type: string
        description: |
          The name of the action
      description:
        type: string
        description: |
          The description of the action
      actionType:
        type: string
        description: |
          The type of the action (price alteration)
      actionValue:
        type: integer
        description: |
          The value of the action (amount)
      immediatePromotionId:
        type: string
        description: |
          The ID of the promotion the action belongs to
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: PricePromotionActionextensions
    description: |
      The promotion action of the assigned promotion, the duration field is depricated, duration was moved to the duration policy entity
  ValidationErrorResponse:
    allOf:
    - $ref: '#/definitions/ErrorResponse'
    - properties:
        validationMessage:
          type: array
          description: |
            The validation messages
          items:
            $ref: '#/definitions/ValidationMessage'
    description: |
      The response of the validation failure, containing the entire error response structure
  ResourceRef:
    type: object
    properties:
      id:
        type: string
        description: |
          The IDs of the resource
      name:
        type: string
        description: |
          The name of the resource
      value:
        type: string
        description: |
          The value of the resource
      resourceType:
        type: string
        description: |
          The type of the resource
      '@referredType':
        type: string
        description: |
          Name of the type of the referred resource entity
        x-dox-NotImplemented: true
      product:
        $ref: '#/definitions/ResourceProductRef'
      metadata:
        type: array
        description: "The metadata related to resource management \n"
        items:
          $ref: '#/definitions/ResourceMetadata'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ResourceRefExtensions
        x-dox-NotImplemented: true
    description: |
      Refrence to the product resources
  ResourceProductRef:
    type: object
    properties:
      productId:
        type: string
        description: |
          The IDs of the product
      primaryProductId:
        type: string
        description: "The ID of the primary product. \n"
      pathToRoot:
        type: string
        description: "List of products that construct the product tree \n"
      status:
        type: string
        description: |
          The lifecycle status of the product
      relatedParty:
        type: array
        description: |
          The party associated with the product, the party has a role which determins its relation to the product (can be 'customer' or 'user')
        items:
          $ref: '#/definitions/RelatedPartyRef'
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
        x-amdocs:
          refDefinition: ResourceProductRefExtensions
        x-dox-NotImplemented: true
    description: |
      Refrence to the product which contains the resource
  ResourceMetadata:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the metadata characteristic
      value:
        type: string
        description: |
          The value of the metadata characteristic
      metatype:
        type: string
        description: |
          The type of the metadata characteristic
      extensions:
        type: object
        additionalProperties:
          type: object
          properties: {}
          x-amdocs:
            refDefinition: ResourceMetadataExtensions
    description: |
      The catalog and operational metadata
  CalculateDuration:
    type: object
    properties:
      id:
        type: string
        description: "The id of calculation generated and used by consumer to correlate request and response \n"
      type:
        type: string
        description: "The type of calculation needed \n"
      calculateEffectiveDate:
        type: string
        format: date-time
        description: |
          The calculated duration end date
        readOnly: true
      durationPolicy:
        $ref: '#/definitions/DurationPolicy'
      product:
        $ref: '#/definitions/ProductRelatedDate'
    description: |
      The calculation of the duration end date
  ProductRelatedDate:
    type: object
    properties:
      id:
        type: string
        description: "the product id \n"
      alternateId:
        type: integer
        format: int64
        description: |
          The alternateID of the product, unique integer identifier for specific product, product may be retrieved also upon it
      orderDate:
        type: string
        format: date-time
        description: |
          The date on which the order was created
      startDate:
        type: string
        format: date-time
        description: "A date time (DateTime). Is the date from which the product has been created (current version).        \n"
      statusChangeDate:
        type: string
        format: date-time
        description: "A date time (DateTime). Is the date from which the product status has been changed       \n"
      terminationDate:
        type: string
        format: date-time
        description: "The date when the termination action was performed on the product            \n"
      activationDate:
        type: string
        format: date-time
        description: |
          The date when the product is set to active. Order handling updates this field either on completion of the order or directly in the inventory
      businessActivity:
        type: array
        items:
          $ref: '#/definitions/BusinessActivity'
    description: |
      The product lean structure with its id and dates to calculate according to the policy
  ImportProductEvent_businessDataFields:
    type: object
    properties:
      name:
        type: string
        description: |
          The name of the identifer
      value:
        type: string
        description: |
          The value of the identifier
    description: the identifier of the entity which according to it the information is grouped
x-dox-DesignDocs:
- description: |
    ProductInvnetoryManagement
  url: https://confluence/display/DEP/Product+Inventory+Management+Subdomain
